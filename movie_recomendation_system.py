# -*- coding: utf-8 -*-
"""movie recomendation system.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-MsGrflXTO5NWMeHfDiNBTvy_0GSUx7S
"""

import pandas as pd
import numpy as np

DF = pd.read_csv("https://github.com/YBIFoundation/Dataset/raw/main/Movies%20Recommendation.csv")

DF.head()

DF.describe()

DF.info()

DF.shape

DF.columns

movie_features = DF[['Movie_Genre', 'Movie_Keywords', 'Movie_Tagline', 'Movie_Cast','Movie_Director']].fillna('')

movie_features.shape

movie_features

X= movie_features['Movie_Genre']+' '+movie_features['Movie_Keywords']+' '+movie_features['Movie_Tagline']+' '+movie_features['Movie_Cast']+' '+movie_features['Movie_Director']

X

X.shape

from sklearn.feature_extraction.text import TfidfVectorizer

tfidf = TfidfVectorizer()

X = tfidf.fit_transform(X)

X.shape

print(X)

from sklearn.metrics.pairwise import cosine_similarity

Similarity_Score = cosine_similarity(X)

Similarity_Score

Similarity_Score.shape

"""get movie name from user as input and look for similar words"""

Favourite_Movie_Name = input('Enter the movie name : ')

Movies_Title_List = DF['Movie_Title'].tolist()

import difflib

Movie_recomendation = difflib.get_close_matches(Favourite_Movie_Name, Movies_Title_List)
print(Movie_recomendation)

Close_Match = Movie_recomendation[0]
print(Close_Match)

Index_of_Close_Match_Movie = DF[DF.Movie_Title == Close_Match]['Movie_ID'].values[0]
print(Index_of_Close_Match_Movie)

"""Recomendation list of simiilar movies"""

Recomedation_score = list(enumerate(Similarity_Score[Index_of_Close_Match_Movie]))
print(Recomedation_score)

len(Recomedation_score)

Sorted_alike_movies = sorted(Recomedation_score, key = lambda x:x[1], reverse=True)
print(Sorted_alike_movies)

#name of similar movies based on index
print('Movies suggested for you : \n')

i = 1

for movie in Sorted_alike_movies:
  index = movie[0]
  # title_from_index = movie.iloc[index]['Movie_itle'] # Access the movie title from the DataFrame using the index
  title_from_index = DF[DF.index==index]['Movie_Title'].values[0]
  if (i<15):
    print(i, '.',title_from_index)
    i+=1

Movie_name = input(' Enter movie name : ')
list_of_all_titles = DF['Movie_Title'].tolist()
find_close_match = difflib.get_close_matches(Movie_name, list_of_all_titles)
close_match = find_close_match[0]
index_of_the_movie = DF[DF.Movie_Title == close_match]['Movie_ID'].values[0]
recomedation_score = list(enumerate(Similarity_Score[index_of_the_movie]))
sorted_alike_movies = sorted(recomedation_score, key = lambda x:x[1], reverse=True)
print('Movies suggested for you : \n')
i = 1
for movie in sorted_alike_movies:
  index = movie[0]
  title_from_index = DF[DF.index==index]['Movie_Title'].values[0]
  if (i<15):
    print(i, '.',title_from_index)
    i+=1